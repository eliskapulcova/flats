buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:2.0.5.RELEASE")
    }
}

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

bootJar {
    baseName = 'eliska-pulcova-flats'
    version = '0.1.0'
}

repositories {
    mavenCentral()
    maven { url 'https://jitpack.io' }
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

dependencies {
    implementation "org.springframework.boot:spring-boot-starter-web"
    implementation "org.seleniumhq.selenium:selenium-java:3.8.1"
    implementation "org.jetbrains:annotations:17.0.0"
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-data-jpa', version: '2.1.3.RELEASE'
    implementation group: 'org.javassist', name: 'javassist', version: '3.24.1-GA'
    implementation "javax.xml.bind:jaxb-api:2.3.0"
    implementation('org.postgresql:postgresql')
    implementation "com.h2database:h2"
    implementation 'com.github.googlemaps:google-maps-services-java:c9084de'
    implementation group: 'org.thymeleaf', name: 'thymeleaf-spring5', version: '3.0.11.RELEASE'

    testCompile("junit:junit")
}

task runIndexGenerator(type: JavaExec) {
    main = "eliskapulcova.flats.IndexGenerator"
    classpath sourceSets.main.runtimeClasspath
}

task runAdDetailCrawler(type: JavaExec) {
    main = "eliskapulcova.flats.AdDetailRunner"
    classpath sourceSets.main.runtimeClasspath
}

task runGeocodingGenerator(type: JavaExec) {
    main = "eliskapulcova.flats.GeocodingGeneratorRunner"
    classpath sourceSets.main.runtimeClasspath
    systemProperties System.getProperties()
}

task runWeb(type: JavaExec) {
    main = "eliskapulcova.flats.Application"
    classpath sourceSets.main.runtimeClasspath
    systemProperties System.getProperties()
}
